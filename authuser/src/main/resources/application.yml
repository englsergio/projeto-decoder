server:
  port: 8087
  servlet:
    context-path: '/ead-authuser'

spring:
  application:
    name: authuser
  config:
    # we don't need to specify an ip/port for the configserver
    # because spring is looking in its default localhost:8888
#    import: 'optional:configserver:'
    import: 'optional:configserver:http://host.docker.internal:8888'
  cloud:
    config:
      discovery:
        service-id: config-server
  datasource:
    password: ${PSQL_PASS}
    username: ${PSQL_USER}
    url: jdbc:postgresql://${PSQL_HOST}:5432/ead-authuser-v2
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # not needed in hibernate 6+
        show_sql: true
        format_sql: true
  rabbitmq:
    port: 5672
    # valores abaixo são padrão. Podem ser omitidos.
    username: guest
    password: guest
    host: host.docker.internal

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health

logging:
  level:
    org:
      hibernate:
        sql: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace # shows preparedStatement parameters
    com:
      lsalmeida.authuser:
        config: info

api:
  client:
    base-url: course
    endpoint: ${API_COURSE_ENDPOINT}
  broker:
    exchange:
      userEvent: ead.userevent # exchange name

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}

resilience4j:
  circuitbreaker:
    instances:
      circuitbreakerInstance:
        sliding-window-size: 30
        permitted-number-of-calls-in-half-open-state: 2
        sliding-window-type: time_based
        minimum-number-of-calls: 2
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 80
  retry:
    instances:
      retryInstance:
        maxAttempts: 3
        waitDuration: 5s
