server:
  port: 8084
  servlet:
    context-path: '/ead-notification'

spring:
  application:
    name: notification
  config:
    # we don't need to specify an ip/port for the configserver
    # because spring is looking in its default localhost:8888
    import: 'optional:configserver:'
  cloud:
    config:
      discovery:
        service-id: config-server
      username: ${APP_CONFIG_SERVER_USERNAME}
      password: ${APP_CONFIG_SERVER_PASSWORD}

  datasource:
    password: ${PSQL_PASS}
    username: ${PSQL_USER}
    url: jdbc:postgresql://${PSQL_HOST}:5432/ead-notification-v2
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # not needed in hibernate 6+
        show_sql: true
        format_sql: true
  rabbitmq:
    port: 5672
    host: ${HOST_DOCKER}

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health

logging:
  level:
    org:
      hibernate:
        sql: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace # shows preparedStatement parameters
    com:
      lsalmeida.authuser:
        config: info

api:
  broker:
    exchange:
      notificationCommandExchange: ead.notificationcommand # exchange name
    queue:
      notificationCommandQueue:
        name: ead.notificationcommand.ms.notification
    key:
      notificationCommandKey: ms.notification

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}