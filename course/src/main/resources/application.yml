server:
  port: 8082
  servlet:
    context-path: '/ead-course'

spring:
  application:
    name: course
  config:
  # we don't need to specify an ip/port for the configserver
    # because spring is looking in its default localhost:8888
#    import: 'optional:configserver:'
    import: 'optional:configserver:'
  cloud:
    config:
      discovery:
        service-id: config-server
      username: ${APP_CONFIG_SERVER_USERNAME}
      password: ${APP_CONFIG_SERVER_PASSWORD}
  datasource:
    password: ${PSQL_PASS}
    username: ${PSQL_USER}
    url: jdbc:postgresql://${PSQL_HOST}:5432/ead-course-v2
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect # not needed in hibernate 6+
        show_sql: true
  rabbitmq:
    port: 5672
    host: ${HOST_DOCKER}

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health

logging:
  level:
    org:
      hibernate:
        sql: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace # shows preparedStatement parameters

api:
  user:
    base-url: authuser
    endpoint: ${API_USER_ENDPOINT}
    endpoint-propagate-subscription: ${API_USER_ENDPOINT_PROPAG_SUBS}
    endpoint-propagate-deletion: ${API_USER_ENDPOINT_PROPAG_DEL}
  broker:
    exchange:
      userEvent: ead.userevent # exchange name
      notificationCommandExchange: ead.notificationcommand # exchange name
    key:
      notificationCommandKey: ms.notification
    queue:
      userEventQueue:
        name: ead.userevent.ms.course

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}

resilience4j:
  retry:
    instances:
      retryInstance:
        maxAttempts: 3
        waitDuration: 5s
